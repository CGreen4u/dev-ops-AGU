version: '3.3'

services:
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    #restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: 'yes'
  nimbus:
    image: storm
    container_name: nimbus
    command: storm nimbus
    depends_on:
      - zookeeper
    links:
      - zookeeper
    #restart: always
    ports:
      - 6627:6627
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - "discovery.type=single-node"
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
      - xpack.security.enabled=false
    #volumes:
    #  - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL="http://elasticsearch:9200"
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=changeme
      - xpack.security.enabled=false
    ports:
      - 5601:5601
    links:
      - elasticsearch
  postgres:
    image: postgres:12.2
    volumes:
      - postgres:/var/lib/postgresql/data
    #  - ./postgres-data:/var/lib/postgresql/data
    #restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: root              
      POSTGRES_DB: mydb
    ports:
      - 5432:5432
  adminer:
    image: adminer
    #restart: always
    ports:
      - 8888:8080 #localhost:8888
  nifi:
    image: cgreen010/nifiwithdrivers:latest
    volumes:
      - nifi:/opt/nifi/nifi-current/state
      - nifi:/opt/nifi/nifi-current/repositories/database_repository
      - nifi:/opt/nifi/nifi-current/repositories/flowfile_repository
      - nifi:/opt/nifi/nifi-current/repositories/content_repository
      - nifi:/opt/nifi/nifi-current/repositories/provenance_repository
    #  - /home/chris/ubuntu/nifi/conf/data_2:/opt/nifi/nifi-current/conf
    #  - /home/chris/ubuntu/nifi/conf/postgres:/opt/nifi/nifi-current/lib
    #  - /tmp/nifi:/opt/nifi_in
    #  - ./extensions:/opt/nifi/nifi-current/extensions #avoid relational posistioning ./ needs to be /home/chris/
    ports:
      - 8080 # Unsecured HTTP Web Port
    links:
      - elasticsearch
      - postgres
    environment:
      - NIFI_WEB_HTTP_PORT=8080
      - NIFI_CLUSTER_IS_NODE=true
      - NIFI_CLUSTER_NODE_PROTOCOL_PORT=8082
      - NIFI_ZK_CONNECT_STRING=zookeeper:2181
      - NIFI_ELECTION_MAX_WAIT=1 min
      - NIFI_HOME=/opt/nifi/nifi-current
      - NIFI_LOG_DIR=/opt/nifi/nifi-current/logs
      - NIFI_PID_DIR=/opt/nifi/nifi-current/run
      - NIFI_BASE_DIR=/opt/nifi
  # kafdrop:
  #   image: obsidiandynamics/kafdrop
  #   #restart: "no"
  #   ports:
  #       - "9000:9000"
  #   environment:
  #       KAFKA_BROKERCONNECT: "kafka:29092"
  #   depends_on:
  #       - "kafka"
  # kafka:
  #   image: wurstmeister/kafka
  #   depends_on:
  #       - zookeeper
  #   ports:
  #       - 9092:9092
  #   environment:
  #       KAFKA_BROKER_ID: 1
  #       KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
  #       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  global_forcast:
    image: cgreen010/hbtest:version1
    ports: 
      - 8151
    links:
      - elasticsearch
      - postgres
  supervisor:
    image: storm
    container_name: supervisor
    command: storm supervisor
    depends_on:
      - nimbus
      - zookeeper
    links:
      - nimbus
      - zookeeper
    #restart: always
volumes:
  postgres:
  nifi:
  openldap:
  metabase:
  pgadmin:
  global_forcast:





























